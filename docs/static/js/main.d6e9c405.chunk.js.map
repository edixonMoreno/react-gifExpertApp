{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAqB5C,OACI,sBAAMC,SAZW,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAtBc,SAACP,GAEvBF,EAAeE,EAAEQ,OAAOF,a,sCCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,0FAE4EC,UAAUH,GAFtF,sBAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAebM,GAfa,4CAAH,sDCARO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIjC,OACI,qBAAKc,UAAU,8CAAf,SACI,qBAAKC,IAAMf,EAAMgB,IAAMN,OCHtBO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAd,SAAEA,GAAe,IAAD,EAEbd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAoBvC,OAbAC,qBAAY,WAERxB,EAASC,GACJwB,MAAK,SAAAC,GAEGH,EAAS,CACNf,KAAMkB,EACNL,SAAS,SAI1B,CAACpB,IAEGqB,EDlB0BK,CAAa1B,GAAjCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,qCAEI,oBAAIJ,UAAW,yCAAf,SAA0DhB,IAEzDoB,GAAW,mBAAGJ,UAAW,mCAAd,qBAEZ,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aE0BpBgB,EArCI,WAAO,IAAD,EAIazC,mBAAS,CAAC,cAJvB,mBAIhB0C,EAJgB,KAIJ3C,EAJI,KAWvB,OAEE,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEE,6BAGQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEMA,SAAWA,GADLA,Y,MC1BhC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d6e9c405.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (e) => {\r\n        \r\n        setinputValue( e.target.value );\r\n  \r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        \r\n        if( inputValue.trim().length >2) {\r\n            setCategories(cats => [inputValue, ...cats ]);\r\n            setinputValue(\"\");\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\" \r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n\r\n    )\r\n\r\n  \r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n  }\r\n","\r\n\r\n export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=mAsF4VV2xCxxbw60n98zsLZwf6g6BtkV&q=${ encodeURI(category) }&limit=10`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n    \r\n   // console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeft \" >\r\n            <img src={ url } alt={ title } />\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\nimport { useFetchGif } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGif( category );\r\n   \r\n    return (\r\n        <>\r\n\r\n            <h3 className= \"animate__animated animate__slideInDown\">{ category }</h3>\r\n\r\n            {loading && <p className= \"animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n            \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img} \r\n                        />\r\n                    ))\r\n\r\n                }           \r\n            \r\n             </div> \r\n        </>\r\n    )\r\n        \r\n       \r\n}\r\n","import { useState } from \"react\"\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGif = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(  () => {\r\n\r\n        getGifs( category )\r\n            .then(imgs => {\r\n             \r\n                     setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    }); \r\n                })\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    \r\n    \r\n    const [categories, setCategories] = useState([\"One Punch\"]);  \r\n    \r\n    \r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories, \"Naruto\"]);\r\n    // }\r\n\r\n    return (\r\n  \r\n      <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories= { setCategories } />\r\n      <hr />\r\n\r\n        <ol>\r\n            \r\n            { \r\n                categories.map( category => (\r\n                    <GifGrid \r\n                          key={ category }\r\n                          category={ category } />\r\n                ))\r\n            }\r\n        \r\n        </ol>\r\n\r\n      </>\r\n    );\r\n  \r\n  }\r\n\r\n  \r\n\r\n  export default GifExpertApp;\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from \"./GifExpertApp\"\nimport './index.css';\n\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\n"],"sourceRoot":""}